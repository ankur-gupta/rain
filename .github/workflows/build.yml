# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11"]

    steps:
    # This step comes from GitHub Actions' Python Packaging 
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip  # Path to the directory containing the Python dependencies
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-python-${{ matrix.python-version }}  # Cache key
    # This step comes from https://github.com/pypa/hatch/issues/669
    # But we don't use pipx because this is a temporary build environment.
    - name: Install hatch
      run: |
        python -m pip install --upgrade pip
        pip install hatch
    # `not-random` is defined in pyproject.toml and generates .coverage file
    - name: Test
      run: |
        hatch run test:not-random
        hatch run test:coverage-json
    - name: Clean and build
      run: |
        hatch clean
        hatch build
    - name: Check that package is installable
      run: |
        pwd
        pip install dist/rain-*.whl
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.json  # Path to coverage file to upload
        fail_ci_if_error: true  # Should the CI build fail if Codecov runs into an error during upload
